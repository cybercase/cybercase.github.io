{"pageProps":{"post":{"slug":"pre_commit_hook_pep8","title":"Pre-commit Hook - PEP8 Version","description":"Python PEP8 commit hook for git","date":"2013-09-15T00:00:01.000Z","content":"<h1>Pre-commit Hook</h1>\n<h2>PEP8 Version</h2>\n<p>A couple of days ago I’ve refactored and enhanced my pre-commit hook to check also for PEP8 compliancy of Python source files. To achieve this I used the pep8 tool that you can easily install with:</p>\n<p><code>pip install pep8</code></p>\n<p>And here’s the new pre-commit hook:</p>\n<pre><code class=\"hljs language-bash\"><span class=\"hljs-meta\">#!/bin/bash</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># TAB CHECK:</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Searches tab characters in staged changes.</span>\n<span class=\"hljs-comment\"># To specify file extensions to check use \"hooks.notabs\" variable.</span>\n<span class=\"hljs-comment\"># Extensions are separated by \"|\".</span>\n<span class=\"hljs-comment\"># Eg:</span>\n<span class=\"hljs-comment\">#   git config hooks.notabs html|js</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># PEP8 CHECK:</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># run pep8 on all python staged files.</span>\n<span class=\"hljs-comment\"># To specify pep8 command options use \"hook.pep8options\" variable</span>\n<span class=\"hljs-comment\">#</span>\n<span class=\"hljs-comment\"># Eg:</span>\n<span class=\"hljs-comment\">#   git config hook.pep8 \"--ignore=E226,E302\"</span>\n\n<span class=\"hljs-built_in\">exec</span> 1>&#x26;2\n\nnotabs=$(git config hooks.notabs)\nnotabs_error=0\n<span class=\"hljs-keyword\">for</span> f <span class=\"hljs-keyword\">in</span> `git diff --cached --name-only | egrep <span class=\"hljs-string\">\"\\.(\"</span><span class=\"hljs-variable\">$notabs</span><span class=\"hljs-string\">\")$\"</span>`\n<span class=\"hljs-keyword\">do</span>\n    lines=`git show :<span class=\"hljs-variable\">$f</span> | fgrep -n $<span class=\"hljs-string\">'\\t'</span>`\n    <span class=\"hljs-keyword\">if</span> [ -n <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$lines</span>\"</span> ]; <span class=\"hljs-keyword\">then</span>\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"TAB(s) found in:\"</span> <span class=\"hljs-variable\">$f</span> <span class=\"hljs-string\">\"at line(s)\"</span>\n        <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$lines</span>\n        notabs_error=1\n    <span class=\"hljs-keyword\">fi</span>\n<span class=\"hljs-keyword\">done</span>\n\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$notabs_error</span> -eq 1 ]; <span class=\"hljs-keyword\">then</span>\n    <span class=\"hljs-built_in\">echo</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Remove all TAB(s) characters and stage again your changes.\"</span>\n    <span class=\"hljs-built_in\">echo</span>\n    <span class=\"hljs-built_in\">exit</span> 1\n<span class=\"hljs-keyword\">fi</span>\n\npep8_options=$(git config hooks.pep8options)\npep8_error=0\n<span class=\"hljs-keyword\">for</span> f <span class=\"hljs-keyword\">in</span> `git diff --cached --name-only | egrep <span class=\"hljs-string\">\".py$\"</span>`\n<span class=\"hljs-keyword\">do</span>\n    git show :<span class=\"hljs-variable\">$f</span> | pep8 --format=<span class=\"hljs-variable\">$f</span><span class=\"hljs-string\">\":%(row)d:%(col)d: %(code)s %(text)s\"</span> <span class=\"hljs-variable\">$pep8_options</span> -\n    <span class=\"hljs-keyword\">if</span> [ $? -eq 1 ]; <span class=\"hljs-keyword\">then</span>\n        pep8_error=1\n    <span class=\"hljs-keyword\">fi</span>\n<span class=\"hljs-keyword\">done</span>\n\n<span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-variable\">$pep8_error</span> -eq 1 ]; <span class=\"hljs-keyword\">then</span>\n    <span class=\"hljs-built_in\">echo</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Your commit is cause of one or more PEP8 error(s)\"</span>\n    <span class=\"hljs-built_in\">echo</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Please fix these errors and stage again your changes\"</span>\n    <span class=\"hljs-built_in\">echo</span>\n    <span class=\"hljs-built_in\">exit</span> 1\n<span class=\"hljs-keyword\">fi</span>\n</code></pre>\n<p>This new version is quite straightforward so I’m not digging too much into it.\nThe two main changes are:</p>\n<ul>\n<li>Discover of command <code>git show</code> :)</li>\n<li>Add pep8 style test</li>\n</ul>\n<p>About the latter point, it’s important to say that the pep8 has becomes one of the requirements to use this hook. Also, you can configure your pep8 options by typing:</p>\n<p><code>git config --add hooks.pep8options \"--ignore=E121,E122\" # this ignores Error 121, 122</code></p>\n<p>A complete list of errors and warnings of pep8 tool is available here: <a href=\"http://pep8.readthedocs.org/en/latest/intro.html#error-codes\">http://pep8.readthedocs.org/en/latest/intro.html#error-codes</a></p>\n<p>PS.</p>\n<p>I’m using this hook just from a couple of days, so it may (probably) have some bugs… feel free to contribute at <a href=\"https://github.com/cybercase/funproject/blob/master/experiments/pre-commit\">https://github.com/cybercase/funproject/blob/master/experiments/pre-commit</a> ;)</p>\n<p><em>— 15/09/2013</em></p>"}},"__N_SSG":true}